// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$btn-basket-name: 'btn_basket';
$btn-basket-x: 0px;
$btn-basket-y: 74px;
$btn-basket-offset-x: 0px;
$btn-basket-offset-y: -74px;
$btn-basket-width: 48px;
$btn-basket-height: 48px;
$btn-basket-total-width: 266px;
$btn-basket-total-height: 122px;
$btn-basket-image: 'sp_img.png';
$btn-basket: (0px, 74px, 0px, -74px, 48px, 48px, 266px, 122px, 'sp_img.png', 'btn_basket', );
$btn-mypage-name: 'btn_mypage';
$btn-mypage-x: 58px;
$btn-mypage-y: 74px;
$btn-mypage-offset-x: -58px;
$btn-mypage-offset-y: -74px;
$btn-mypage-width: 48px;
$btn-mypage-height: 48px;
$btn-mypage-total-width: 266px;
$btn-mypage-total-height: 122px;
$btn-mypage-image: 'sp_img.png';
$btn-mypage: (58px, 74px, -58px, -74px, 48px, 48px, 266px, 122px, 'sp_img.png', 'btn_mypage', );
$btn-search-name: 'btn_search';
$btn-search-x: 116px;
$btn-search-y: 74px;
$btn-search-offset-x: -116px;
$btn-search-offset-y: -74px;
$btn-search-width: 48px;
$btn-search-height: 48px;
$btn-search-total-width: 266px;
$btn-search-total-height: 122px;
$btn-search-image: 'sp_img.png';
$btn-search: (116px, 74px, -116px, -74px, 48px, 48px, 266px, 122px, 'sp_img.png', 'btn_search', );
$drop-down-name: 'drop_down';
$drop-down-x: 174px;
$drop-down-y: 74px;
$drop-down-offset-x: -174px;
$drop-down-offset-y: -74px;
$drop-down-width: 20px;
$drop-down-height: 16px;
$drop-down-total-width: 266px;
$drop-down-total-height: 122px;
$drop-down-image: 'sp_img.png';
$drop-down: (174px, 74px, -174px, -74px, 20px, 16px, 266px, 122px, 'sp_img.png', 'drop_down', );
$header-logo-name: 'header_logo';
$header-logo-x: 0px;
$header-logo-y: 0px;
$header-logo-offset-x: 0px;
$header-logo-offset-y: 0px;
$header-logo-width: 266px;
$header-logo-height: 64px;
$header-logo-total-width: 266px;
$header-logo-total-height: 122px;
$header-logo-image: 'sp_img.png';
$header-logo: (0px, 0px, 0px, 0px, 266px, 64px, 266px, 122px, 'sp_img.png', 'header_logo', );
$spritesheet-width: 266px;
$spritesheet-height: 122px;
$spritesheet-image: 'sp_img.png';
$spritesheet-sprites: ($btn-basket, $btn-mypage, $btn-search, $drop-down, $header-logo, );
$spritesheet: (266px, 122px, 'sp_img.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
